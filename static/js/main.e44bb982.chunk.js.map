{"version":3,"sources":["contexts/UserContext.ts","api/core/ApiError.ts","api/core/OpenAPI.ts","api/core/request.ts","api/services/Service.ts","components/Account/Login.tsx","components/LoginView.tsx","contexts/LocationContext.ts","components/LocationTracer.tsx","icons/navigation_black_24dp.svg","icons/bubble_icon_blue.svg","icons/bubble_icon_red.svg","icons/bubble_icon_yellow.svg","icons/bubble_icon_green.svg","components/Bubble.tsx","hooks/WindowDimensions.ts","components/GeoCommentMap.tsx","components/MapView.tsx","components/Thread/VoteButtons.tsx","components/Thread/Comment.tsx","components/HistoryView.tsx","components/Thread/ThreadInfo.tsx","components/Thread/WriteComment.tsx","components/Thread/ReportDialog.tsx","components/ThreadView.tsx","components/Account/Register.tsx","components/RegisterView.tsx","components/ReportsView.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserContext","createContext","userCredentials","email","userid","token","setUserCredentials","console","warn","useUserContext","useContext","ApiError","response","message","url","status","statusText","body","Error","OpenAPI","BASE","VERSION","WITH_CREDENTIALS","TOKEN","undefined","USERNAME","PASSWORD","HEADERS","isDefined","value","isString","isStringWithValue","isBlob","Blob","getUrl","options","path","replace","query","params","qs","Object","keys","forEach","key","Array","isArray","push","encodeURIComponent","String","length","join","getQueryString","resolve","resolver","a","getHeaders","username","password","defaultHeaders","headers","Headers","Accept","append","log","credentials","btoa","type","getRequestBody","formData","FormData","getFormData","JSON","stringify","sendRequest","method","request","fetch","getResponseHeader","responseHeader","content","get","getResponseBody","contentType","toLowerCase","startsWith","json","text","error","catchErrors","result","400","401","403","404","500","502","503","errors","ok","responseBody","Service","lat","lng","radius","__request","threadId","requestBody","levels","commentId","vote","level","userId","top","all","reportId","action","time","Login","useState","setUsername","setPassword","useStyles","makeStyles","theme","root","margin","spacing","width","history","useHistory","classes","Paper","style","Grid","justify","alignItems","direction","className","autoComplete","onSubmit","e","event","preventDefault","ApiService","login","then","resp","res","container","padding","FormControl","TextField","required","id","label","onChange","target","InputProps","startAdornment","InputAdornment","position","AccountCircle","Lock","Button","variant","color","endIcon","VpnKey","onClick","LoginView","LocationContext","location","setLocation","useLocation","LocationTracer","map","useMap","React","useEffect","flyTo","Bubble","state","visibility","setVisibily","getBubbleIcon","icon","setIcon","setLink","comment","setTimeout","Marker","thread","opacity","eventHandlers","click","votes","icon_size","Math","round","bubble_icon_blue","bubble_icon_red","bubble_icon_green","bubble_icon_yellow","Icon","iconUrl","iconRetinaUrl","iconAnchor","popupAnchor","iconSize","getWindowDimensions","window","innerWidth","height","innerHeight","GeoCommentMap","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","threads","setThreads","navigation_icon","nav_icon","getThreadsAt","newThreads","threadArray","title","description","MapContainer","center","zoom","scrollWheelZoom","zoomControl","dragging","TileLayer","MapView","updateLocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","setInterval","Provider","c","abs","Promise","ServiceApi","createStyles","secondary","palette","contrastText","backgroundColor","main","primary","green","grey","red","yellow","lightblue","blue","selected","VoteButtons","upvoted","setUpvoted","downvoted","setDownvoted","success","disabled","Avatar","reportCallback","selectCallback","ThreadComment","RegExp","exec","Card","maxWidth","item","xs","flexDirection","justifyContent","display","upvotes","downvotes","paddingLeft","src","alt","maxHeight","objectFit","paddingBottom","Typography","wordWrap","voteButtons","HistoryView","selectedCommentId","setCommentId","setReportId","setOpenReport","parentId","comments","setComments","renderComments","cs","children","filter","marginLeft","child2","Number","MAX_VALUE","promises","t","getThreadComments","flatMap","ThreadInfo","paddingTop","WriteComment","msg","setMsg","setError","getFile","setFile","getAnonymous","setAnonymous","submit","r","Fragment","component","files","htmlFor","paddingRight","AddAPhoto","multiline","placeholder","s","inputProps","IconButton","aria-label","Block","Person","RateReview","ReportDialog","props","reason","setReason","handleClose","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","fullWidth","DialogActions","callback","anon","file","formdata","toString","name","uploadImage","postComment","anonymous","ThreadView","reportCommentId","openReport","Container","fixed","AppBar","bottom","onMessageSubmit","reportComment","Register","privateAcc","setPrivate","register","private","FormGroup","row","FormControlLabel","control","Checkbox","checked","RegisterView","report","ReportsView","getReports","setReports","reports","Comment","startIcon","Check","handleReport","handleBan","handleIgnore","createMuiTheme","light","dark","flexGrow","App","rel","href","to","Toolbar","edge","Menu","aria-controls","aria-haspopup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e44bb982.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\r\n\r\nexport type UserCredentials = {\r\n  email: string;\r\n  userid: number;\r\n  token: string;\r\n};\r\n\r\nexport type UserContextType = {\r\n  userCredentials: UserCredentials;\r\n  setUserCredentials: (userCredentials: UserCredentials) => void;\r\n};\r\n\r\nexport const UserContext = createContext<UserContextType>({\r\n  userCredentials: { email: \"\", userid: 0, token: \"\" },\r\n  setUserCredentials: (userCredentials: UserCredentials) =>\r\n    console.warn(\"no context provider\"),\r\n});\r\n\r\nexport const useUserContext = () => useContext(UserContext);\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n\n    constructor(response: ApiResult, message: string) {\n        super(message);\n\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n    }\n}","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\ntype Config = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    TOKEN?: string | Resolver<string>;\n    USERNAME?: string | Resolver<string>;\n    PASSWORD?: string | Resolver<string>;\n    HEADERS?: Headers | Resolver<Headers>;\n}\n\nexport const OpenAPI: Config = {\n    BASE: 'https://api.server.test/v1',\n    VERSION: '1.0',\n    WITH_CREDENTIALS: false,\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n};","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from \"./ApiError\";\nimport type { ApiRequestOptions } from \"./ApiRequestOptions\";\nimport type { ApiResult } from \"./ApiResult\";\nimport { OpenAPI } from \"./OpenAPI\";\n\nfunction isDefined<T>(\n  value: T | null | undefined\n): value is Exclude<T, null | undefined> {\n  return value !== undefined && value !== null;\n}\n\nfunction isString(value: any): value is string {\n  return typeof value === \"string\";\n}\n\nfunction isStringWithValue(value: any): value is string {\n  return isString(value) && value !== \"\";\n}\n\nfunction isBlob(value: any): value is Blob {\n  return value instanceof Blob;\n}\n\nfunction getQueryString(params: Record<string, any>): string {\n  const qs: string[] = [];\n  Object.keys(params).forEach((key) => {\n    const value = params[key];\n    if (isDefined(value)) {\n      if (Array.isArray(value)) {\n        value.forEach((value) => {\n          qs.push(\n            `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`\n          );\n        });\n      } else {\n        qs.push(\n          `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`\n        );\n      }\n    }\n  });\n  if (qs.length > 0) {\n    return `?${qs.join(\"&\")}`;\n  }\n  return \"\";\n}\n\nfunction getUrl(options: ApiRequestOptions): string {\n  const path = options.path.replace(/[:]/g, \"_\");\n  const url = `${OpenAPI.BASE}${path}`;\n\n  if (options.query) {\n    return `${url}${getQueryString(options.query)}`;\n  }\n  return url;\n}\n\nfunction getFormData(params: Record<string, any>): FormData {\n  const formData = new FormData();\n  Object.keys(params).forEach((key) => {\n    const value = params[key];\n    if (isDefined(value)) {\n      formData.append(key, value);\n    }\n  });\n  return formData;\n}\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nasync function resolve<T>(\n  options: ApiRequestOptions,\n  resolver?: T | Resolver<T>\n): Promise<T | undefined> {\n  if (typeof resolver === \"function\") {\n    return (resolver as Resolver<T>)(options);\n  }\n  return resolver;\n}\n\nasync function getHeaders(options: ApiRequestOptions): Promise<Headers> {\n  const token = await resolve(options, OpenAPI.TOKEN);\n  const username = await resolve(options, OpenAPI.USERNAME);\n  const password = await resolve(options, OpenAPI.PASSWORD);\n  const defaultHeaders = await resolve(options, OpenAPI.HEADERS);\n\n  const headers = new Headers({\n    Accept: \"application/json\",\n    ...defaultHeaders,\n    ...options.headers,\n  });\n\n  if (isStringWithValue(token)) {\n    headers.append(\"Authorization\", `Bearer ${token}`);\n    console.log(token);\n  }\n\n  if (isStringWithValue(username) && isStringWithValue(password)) {\n    const credentials = btoa(`${username}:${password}`);\n    headers.append(\"Authorization\", `Basic ${credentials}`);\n  }\n\n  if (options.body) {\n    if (isBlob(options.body)) {\n      headers.append(\n        \"Content-Type\",\n        options.body.type || \"application/octet-stream\"\n      );\n    } else if (isString(options.body)) {\n      headers.append(\"Content-Type\", \"text/plain\");\n    } else {\n      headers.append(\"Content-Type\", \"application/json\");\n    }\n  }\n  return headers;\n}\n\nfunction getRequestBody(options: ApiRequestOptions): BodyInit | undefined {\n  if (options.formData) {\n    return getFormData(options.formData);\n  }\n  if (options.body) {\n    if (isString(options.body) || isBlob(options.body)) {\n      return options.body;\n    } else {\n      return JSON.stringify(options.body);\n    }\n  }\n  return undefined;\n}\n\nasync function sendRequest(\n  options: ApiRequestOptions,\n  url: string\n): Promise<Response> {\n  const request: RequestInit = {\n    method: options.method,\n    headers: await getHeaders(options),\n    body: getRequestBody(options),\n  };\n  if (OpenAPI.WITH_CREDENTIALS) {\n    request.credentials = \"include\";\n  }\n  return await fetch(url, request);\n}\n\nfunction getResponseHeader(\n  response: Response,\n  responseHeader?: string\n): string | null {\n  if (responseHeader) {\n    const content = response.headers.get(responseHeader);\n    if (isString(content)) {\n      return content;\n    }\n  }\n  return null;\n}\n\nasync function getResponseBody(response: Response): Promise<any> {\n  try {\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType) {\n      const isJSON = contentType.toLowerCase().startsWith(\"application/json\");\n      if (isJSON) {\n        return await response.json();\n      } else {\n        return await response.text();\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  return null;\n}\n\nfunction catchErrors(options: ApiRequestOptions, result: ApiResult): void {\n  const errors: Record<number, string> = {\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    500: \"Internal Server Error\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    ...options.errors,\n  };\n\n  const error = errors[result.status];\n  if (error) {\n    throw new ApiError(result, error);\n  }\n\n  if (!result.ok) {\n    throw new ApiError(result, \"Generic Error\");\n  }\n}\n\n/**\n * Request using fetch client\n * @param options The request options from the the service\n * @returns ApiResult\n * @throws ApiError\n */\nexport async function request(options: ApiRequestOptions): Promise<ApiResult> {\n  const url = getUrl(options);\n  const response = await sendRequest(options, url);\n  const responseBody = await getResponseBody(response);\n  const responseHeader = getResponseHeader(response, options.responseHeader);\n\n  const result: ApiResult = {\n    url,\n    ok: response.ok,\n    status: response.status,\n    statusText: response.statusText,\n    body: responseHeader || responseBody,\n  };\n\n  catchErrors(options, result);\n  return result;\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { comment } from \"../models/comment\";\nimport type { login } from \"../models/login\";\nimport type { newComment } from \"../models/newComment\";\nimport type { newReport } from \"../models/newReport\";\nimport type { newThread } from \"../models/newThread\";\nimport type { register } from \"../models/register\";\nimport type { report } from \"../models/report\";\nimport type { thread } from \"../models/thread\";\nimport type { user } from \"../models/user\";\nimport { request as __request } from \"../core/request\";\n\nexport class Service {\n  /**\n   * Returns threads in a radius around the given position\n   * @param lat\n   * @param lng\n   * @param radius\n   * @returns thread OK\n   * @throws ApiError\n   */\n  public static async getThreadsAt(\n    lat: number,\n    lng: number,\n    radius: number\n  ): Promise<Array<thread>> {\n    const result = await __request({\n      method: \"GET\",\n      path: `/threads`,\n      query: {\n        lat: lat,\n        lng: lng,\n        radius: radius,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Returns thread with given id\n   * @param threadId\n   * @returns thread OK\n   * @throws ApiError\n   */\n  public static async getThread(threadId: number): Promise<thread> {\n    const result = await __request({\n      method: \"GET\",\n      path: `/thread/${threadId}`,\n      errors: {\n        401: `unauthorized`,\n        404: `not found`,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Create new thread\n   * @param requestBody\n   * @returns thread OK\n   * @throws ApiError\n   */\n  public static async createThread(requestBody?: newThread): Promise<thread> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/thread/`,\n      body: requestBody,\n      errors: {\n        401: `unauthorized`,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Get comments in thread\n   * @param threadId\n   * @param levels Maximum level of subcomments\n   * @returns comment OK\n   * @throws ApiError\n   */\n  public static async getThreadComments(\n    threadId: number,\n    levels?: number\n  ): Promise<Array<comment>> {\n    const result = await __request({\n      method: \"GET\",\n      path: `/thread/${threadId}/comments`,\n      query: {\n        levels: levels,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Create new top level comment\n   * @param threadId\n   * @param requestBody\n   * @returns comment OK\n   * @returns any failure\n   * @throws ApiError\n   */\n  public static async postComment(\n    threadId: number,\n    requestBody?: newComment\n  ): Promise<comment | any> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/thread/${threadId}/comments`,\n      body: requestBody,\n    });\n    return result.body;\n  }\n\n  /**\n   * Get single comment\n   * @param threadId\n   * @param commentId\n   * @returns comment OK\n   * @throws ApiError\n   */\n  public static async getComment(\n    threadId: number,\n    commentId: number\n  ): Promise<comment> {\n    const result = await __request({\n      method: \"GET\",\n      path: `/thread/${threadId}/comments/${commentId}`,\n      errors: {\n        401: `unauthorized`,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Submit vote on comment (or 0 for thread)\n   * @param threadId\n   * @param commentId\n   * @param vote true for upvote, flase for downvote\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async vote(\n    threadId: number,\n    commentId: number,\n    vote: boolean\n  ): Promise<any> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/thread/${threadId}/comments/${commentId}/vote`,\n      query: {\n        vote: vote,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Delete own comment\n   * @param threadId\n   * @param commentId\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async deleteComment(\n    threadId: number,\n    commentId: number\n  ): Promise<any> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/thread/${threadId}/comments/${commentId}/delete`,\n      errors: {\n        401: `unauthorized`,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Report comment to admins\n   * @param threadId\n   * @param commentId\n   * @param requestBody\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async reportComment(\n    threadId: number,\n    commentId: number,\n    requestBody?: newReport\n  ): Promise<any> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/thread/${threadId}/comments/${commentId}/report`,\n      body: requestBody,\n    });\n    return result.body;\n  }\n\n  /**\n   * Get subcomments for this comment\n   * @param threadId\n   * @param commentId\n   * @param level Maximum level of subcomments\n   * @returns comment OK\n   * @throws ApiError\n   */\n  public static async getChildComments(\n    threadId: number,\n    commentId: number,\n    level?: number\n  ): Promise<Array<comment>> {\n    const result = await __request({\n      method: \"GET\",\n      path: `/thread/${threadId}/comments/${commentId}/children`,\n      query: {\n        level: level,\n      },\n      errors: {\n        404: `not found`,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Get information about a user\n   * @param userId\n   * @returns user OK\n   * @throws ApiError\n   */\n  public static async getUser(userId: number): Promise<user> {\n    const result = await __request({\n      method: \"GET\",\n      path: `/user/${userId}`,\n      errors: {\n        401: `unauthorized`,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Get last comments by a user\n   * @param userId\n   * @param top\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async getUserComments(\n    userId: number,\n    top?: number\n  ): Promise<\n    Array<\n      comment & {\n        thread?: thread;\n      }\n    >\n  > {\n    const result = await __request({\n      method: \"GET\",\n      path: `/user/${userId}/comments`,\n      query: {\n        top: top,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Get own comments\n   * @param top\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async getMyComments(top?: number): Promise<\n    Array<\n      comment & {\n        thread?: thread;\n      }\n    >\n  > {\n    const result = await __request({\n      method: \"GET\",\n      path: `/user/me/comments`,\n      query: {\n        top: top,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Get reports (only unhandled by default)\n   * @param all\n   * @returns report OK\n   * @throws ApiError\n   */\n  public static async getReports(all?: boolean): Promise<Array<report>> {\n    const result = await __request({\n      method: \"GET\",\n      path: `/admin/reports`,\n      query: {\n        all: all,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Handle report\n   * @param reportId\n   * @param action decision for report\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async handleReport(\n    reportId: number,\n    action: \"ban\" | \"ignore\"\n  ): Promise<any> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/admin/reports/${reportId}`,\n      query: {\n        action: action,\n      },\n      errors: {\n        401: `unauthorized`,\n        404: `not found`,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * Ban user for a specific time\n   * @param userId\n   * @param time Time in seconds, 0 = infinite\n   * @param requestBody\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async banUser(\n    userId: number,\n    time: number,\n    requestBody?: any\n  ): Promise<any> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/admin/ban/${userId}`,\n      query: {\n        time: time,\n      },\n      body: requestBody,\n      errors: {\n        401: `unauthorized`,\n      },\n    });\n    return result.body;\n  }\n\n  /**\n   * login with email address and password\n   * @param requestBody\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async login(requestBody?: login): Promise<any> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/login`,\n      body: requestBody,\n    });\n    return result.body;\n  }\n\n  /**\n   * create a new account\n   * @param requestBody\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async register(requestBody?: register): Promise<user> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/register`,\n      body: requestBody,\n    });\n    return result.body;\n  }\n\n  /**\n   * upload a new image with a commentId  (0 = thread) and threadId\n   * @param requestBody\n   * @returns any OK\n   * @throws ApiError\n   */\n  public static async uploadImage(requestBody?: any): Promise<any> {\n    const result = await __request({\n      method: \"POST\",\n      path: `/images/upload`,\n      body: requestBody,\n    });\n    return result.body;\n  }\n}\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { AccountCircle, VpnKey, Lock } from \"@material-ui/icons\";\r\nimport { useUserContext } from \"../../contexts/UserContext\";\r\nimport { Service as ApiService } from \"../../api/services/Service\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { OpenAPI } from \"../../api\";\r\n\r\nfunction Login() {\r\n  const { userCredentials, setUserCredentials } = useUserContext();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  function submit(event: React.FormEvent<HTMLFormElement>): Promise<boolean> {\r\n    event.preventDefault();\r\n    return ApiService.login({ email: username, password: password }).then(\r\n      (resp) => {\r\n        console.log(resp);\r\n        setUserCredentials({\r\n          email: username,\r\n          userid: resp.userid,\r\n          token: resp.token,\r\n        });\r\n        OpenAPI.WITH_CREDENTIALS = true;\r\n        OpenAPI.TOKEN = resp.token;\r\n        return true;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper style={{ width: \"300px\" }}>\r\n      <Grid justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n        <form\r\n          className={classes.root}\r\n          autoComplete=\"off\"\r\n          onSubmit={(e) => {\r\n            submit(e).then((res) => {\r\n              if (res) {\r\n                history.push(\"/\");\r\n              }\r\n            });\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ padding: \"10px\" }}\r\n          >\r\n            <FormControl>\r\n              <TextField\r\n                required\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                value={username}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <TextField\r\n              required\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Lock />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              endIcon={<VpnKey />}\r\n              type=\"submit\"\r\n              onClick={() =>\r\n                setUserCredentials({\r\n                  email: \"max.mustermann@gmail.com\",\r\n                  userid: 1,\r\n                  token: \"2dg638d3928h9283hd\",\r\n                })\r\n              }\r\n            >\r\n              login\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Login;\r\nfunction useStyles() {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Account/Login\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useUserContext } from \"../contexts/UserContext\";\r\n\r\nfunction LoginView() {\r\n  const { userCredentials, setUserCredentials } = useUserContext();\r\n\r\n  return (\r\n    <div>\r\n      <h1>LoginView</h1>\r\n      <h3>email: {userCredentials.email}</h3>\r\n      <h3>token: {userCredentials.token}</h3>\r\n      <Grid container justify=\"center\">\r\n        <Login />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginView;\r\n","import { createContext, useContext } from \"react\";\r\nimport { location } from \"../api\";\r\n\r\nexport type LocationContextType = {\r\n  location: location;\r\n  setLocation: (location: location) => void;\r\n};\r\n\r\nexport const LocationContext = createContext<LocationContextType>({\r\n  location: {lat: 0, lng: 0},\r\n  setLocation: (location: location) => console.warn(\"no context provider\"),\r\n});\r\n\r\nexport const useLocation = () => useContext(LocationContext);\r\n","import { useMap } from \"react-leaflet\"\r\nimport React from \"react\"\r\nimport { useLocation } from \"../contexts/LocationContext\"\r\n\r\nexport function LocationTracer() {\r\n    const map = useMap()\r\n    const {location, setLocation} = useLocation()\r\n    React.useEffect(() => {\r\n        map.flyTo(location, 18);\r\n    }, [location]) //whenever the location changes, recenter the map at that location\r\n    return(<div/>);\r\n}","export default __webpack_public_path__ + \"static/media/navigation_black_24dp.68d102d6.svg\";","export default __webpack_public_path__ + \"static/media/bubble_icon_blue.7714e3ae.svg\";","export default __webpack_public_path__ + \"static/media/bubble_icon_red.6e131ae0.svg\";","export default __webpack_public_path__ + \"static/media/bubble_icon_yellow.1498be91.svg\";","export default __webpack_public_path__ + \"static/media/bubble_icon_green.2dfd6c4e.svg\";","import { Icon } from \"leaflet\";\r\nimport React from \"react\";\r\nimport { Marker } from \"react-leaflet\";\r\nimport { comment, Service, thread } from \"../api\";\r\n\r\nimport bubble_icon_blue from \"../icons/bubble_icon_blue.svg\";\r\nimport bubble_icon_red from \"../icons/bubble_icon_red.svg\";\r\nimport bubble_icon_yellow from \"../icons/bubble_icon_yellow.svg\";\r\nimport bubble_icon_green from \"../icons/bubble_icon_green.svg\";\r\n\r\nexport function Bubble(state: { thread: thread }) {\r\n  const COMMENT_ID_OF_ORIGINAL_COMMENT = 0;\r\n\r\n  const [visibility, setVisibily] = React.useState<boolean>(false);\r\n  const [icon, setIcon] = React.useState<Icon>(getBubbleIcon(0, \"red\"));\r\n  const [link, setLink] = React.useState<string>();\r\n\r\n  //start dummy code\r\n  const comment: comment = {\r\n    threadId: 42,\r\n    parentId: 0,\r\n    id: 123,\r\n    upvotes: 16,\r\n    downvotes: 16,\r\n    content: \"Hey\",\r\n  };\r\n\r\n  setTimeout(() => {\r\n    setIcon(getBubbleIcon(comment.upvotes, \"blue\"));\r\n    setLink(\"HelloImaLink\");\r\n    setVisibily(true);\r\n  }, 10000);\r\n  //end dummy code\r\n\r\n  // Service.getComment(state.thread.id, COMMENT_ID_OF_ORIGINAL_COMMENT)\r\n  // .then((comment: comment) => {\r\n  //     setIcon(getBubbleIcon(comment.votes, \"black\"));\r\n  //     setVisibily(true);\r\n  // })\r\n\r\n  return (\r\n    <Marker\r\n      position={state.thread.location}\r\n      icon={icon}\r\n      opacity={visibility ? 1 : 0}\r\n      eventHandlers={{\r\n        click: (e) => {\r\n          console.log(\"marker clicked\", e); //TODO Weiterleitung zur jeweiligen Seite\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction getBubbleIcon(votes: number, color: string) {\r\n  const MAX_ICON_SIZE = 60;\r\n  const MIN_ICON_SIZE = 20;\r\n\r\n  const UPPER_VOTE_LIMIT = 25;\r\n  const LOWER_VOTE_LIMIT = -5;\r\n\r\n  let icon_size = -1;\r\n  if (votes >= UPPER_VOTE_LIMIT) {\r\n    icon_size = MAX_ICON_SIZE;\r\n  } else if (votes <= LOWER_VOTE_LIMIT) {\r\n    icon_size = MIN_ICON_SIZE;\r\n  } else {\r\n    icon_size =\r\n      MIN_ICON_SIZE +\r\n      Math.round(\r\n        ((votes - LOWER_VOTE_LIMIT) / (UPPER_VOTE_LIMIT - LOWER_VOTE_LIMIT)) *\r\n          (MAX_ICON_SIZE - MIN_ICON_SIZE)\r\n      );\r\n  }\r\n\r\n  let icon = bubble_icon_blue;\r\n  switch (color) {\r\n    case \"red\":\r\n      icon = bubble_icon_red;\r\n      break;\r\n    case \"green\":\r\n      icon = bubble_icon_green;\r\n      break;\r\n    case \"yellow\":\r\n      icon = bubble_icon_yellow;\r\n      break;\r\n    case \"blue\":\r\n      icon = bubble_icon_blue;\r\n      break;\r\n  }\r\n\r\n  return new Icon({\r\n    iconUrl: icon,\r\n    iconRetinaUrl: icon,\r\n    iconAnchor: [Math.round(icon_size / 2), Math.round(icon_size / 2)],\r\n    popupAnchor: [Math.round(icon_size / 2), 0],\r\n    iconSize: [icon_size, icon_size],\r\n  });\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import { Icon, latLng, map } from \"leaflet\";\r\nimport React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport { useLocation } from \"../contexts/LocationContext\";\r\nimport { LocationTracer } from \"./LocationTracer\";\r\nimport nav_icon from '../icons/navigation_black_24dp.svg'\r\nimport { Service, thread } from \"../api\";\r\nimport { Bubble } from \"./Bubble\";\r\nimport useWindowDimensions from \"../hooks/WindowDimensions\";\r\n\r\nexport function GeoCommentMap() {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  const [threads, setThreads] = React.useState<thread[]>([])\r\n  const {location, setLocation} = useLocation()\r\n\r\n  const navigation_icon = new Icon({\r\n    iconUrl: nav_icon,\r\n    iconRetinaUrl: nav_icon,\r\n    iconAnchor: [30, 30],\r\n    popupAnchor: [30, 0],\r\n    iconSize: [60, 60],\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    //fetch nearby threads\r\n    Service.getThreadsAt(location.lat, location.lng, 500)\r\n    .then((newThreads) => setThreads(newThreads))\r\n  }, [location]);\r\n  \r\n  //start dummy code\r\n  const thread1: thread = {\r\n    id: 42,\r\n    title: \"Test Title\",\r\n    description: \"Test Description\",\r\n    location: {lat: 49.004172, lng: 8.421980}\r\n  }\r\n\r\n  const thread2: thread = {\r\n    id: 42,\r\n    title: \"Test Title\",\r\n    description: \"Test Description\",\r\n    location: {lat: 49.008172, lng: 8.423980}\r\n  }\r\n\r\n  const thread3: thread = {\r\n    id: 42,\r\n    title: \"Test Title\",\r\n    description: \"Test Description\",\r\n    location: {lat: 49.009172, lng: 8.425980}\r\n  }\r\n\r\n  const thread4: thread = {\r\n    id: 42,\r\n    title: \"Test Title\",\r\n    description: \"Test Description\",\r\n    location: {lat: 49.008372, lng: 8.423380}\r\n  }\r\n\r\n  const thread5: thread = {\r\n    id: 42,\r\n    title: \"Test Title\",\r\n    description: \"Test Description\",\r\n    location: {lat: 49.008072, lng: 8.423080}\r\n  }\r\n\r\n  const thread6: thread = {\r\n    id: 42,\r\n    title: \"Test Title\",\r\n    description: \"Test Description\",\r\n    location: {lat: 49.008372, lng: 8.423080}\r\n  }\r\n\r\n  const threadArray = [thread1, thread2, thread3, thread4, thread5, thread6]\r\n  setTimeout(() => {\r\n    setThreads(threadArray)\r\n  }, 5000)\r\n  //end dummy code\r\n\r\n\r\n\r\n  return (\r\n    <MapContainer\r\n        center={location}\r\n        zoom={18}\r\n        scrollWheelZoom={false}\r\n        style={{height: height}}\r\n        zoomControl={false}\r\n        dragging={false}\r\n        >\r\n      <LocationTracer />\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {threads.map((thread) => <Bubble thread={thread} />)}\r\n      <Marker position={location} icon={navigation_icon}/>\r\n    </MapContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useUserContext } from \"../contexts/UserContext\";\r\nimport { location } from \"../api/models/location\";\r\nimport { GeoCommentMap } from \"./GeoCommentMap\"\r\nimport { LocationContext } from \"../contexts/LocationContext\";\r\n\r\nfunction MapView() {\r\n  const LOCATION_UPDATE_INTERVAL = 5000;\r\n  const FALLBACK_LOCATION = {lat: 49.011202, lng: 8.404114}\r\n\r\n  const { userCredentials, setUserCredentials } = useUserContext();\r\n  const [location, setLocation] = React.useState<location>(FALLBACK_LOCATION);\r\n\r\n\r\n  function updateLocation() {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      setLocation({\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      });\r\n      console.log(\"Update location to lat: \" + location.lat + \" lng: \" + location.lng)\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setInterval(updateLocation, LOCATION_UPDATE_INTERVAL);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <LocationContext.Provider value={{location: location, setLocation: setLocation}}>\r\n        <GeoCommentMap/>\r\n      </LocationContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapView;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { comment } from \"../../api/models/comment\";\r\nimport { Service as ServiceApi } from \"../../api/services/Service\";\r\n\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\r\nimport { green, grey, red, yellow, blue } from \"@material-ui/core/colors\";\r\n\r\nfunction vote(vote: number, c: comment): Promise<boolean> {\r\n  if (Math.abs(vote) !== 1) {\r\n    return new Promise<boolean>(() => {\r\n      return false;\r\n    });\r\n  }\r\n  return ServiceApi.vote(c.threadId, c.id, vote === 1).then(\r\n    () => {\r\n      return true;\r\n    },\r\n    () => {\r\n      return false;\r\n    }\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    secondary: {\r\n      color: theme.palette.secondary.contrastText,\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    primary: {\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    green: {\r\n      backgroundColor: grey[900],\r\n      color: green[500],\r\n    },\r\n    red: {\r\n      backgroundColor: grey[900],\r\n      color: red[500],\r\n    },\r\n    yellow: {\r\n      backgroundColor: grey[900],\r\n      color: yellow[500],\r\n    },\r\n    lightblue: {\r\n      backgroundColor: grey[900],\r\n      color: blue[400],\r\n    },\r\n    selected: {\r\n      backgroundColor: blue[400],\r\n      color: grey[900],\r\n    },\r\n    grey: {\r\n      backgroundColor: grey[900],\r\n      color: grey[100],\r\n    },\r\n  })\r\n);\r\n\r\nfunction VoteButtons(state: {\r\n  comment: comment;\r\n  reportCallback: (id: number) => void;\r\n  selectCallback: (id: number) => void;\r\n  selected?: boolean;\r\n}) {\r\n  const [upvoted, setUpvoted] = useState(false);\r\n  const [downvoted, setDownvoted] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={() => {\r\n          vote(1, state.comment).then((success) => {\r\n            if (success) {\r\n              setUpvoted(true);\r\n            }\r\n          });\r\n        }}\r\n        disabled={upvoted || downvoted}\r\n      >\r\n        <Avatar className={upvoted ? classes.green : classes.grey}>\r\n          <ThumbUpIcon />\r\n        </Avatar>\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          vote(-1, state.comment).then((success) => {\r\n            if (success) {\r\n              setDownvoted(true);\r\n            }\r\n          });\r\n        }}\r\n        disabled={upvoted || downvoted}\r\n      >\r\n        <Avatar className={downvoted ? classes.red : classes.grey}>\r\n          <ThumbDownIcon />\r\n        </Avatar>\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          state.reportCallback(state.comment.id);\r\n        }}\r\n      >\r\n        <Avatar className={classes.yellow}>\r\n          <FlagIcon />\r\n        </Avatar>\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          state.selectCallback(state.comment.id);\r\n        }}\r\n      >\r\n        <Avatar\r\n          className={\r\n            state.selected !== true ? classes.lightblue : classes.selected\r\n          }\r\n        >\r\n          <AddCommentIcon />\r\n        </Avatar>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VoteButtons;\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {\r\n  Avatar,\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { green, grey, red, yellow } from \"@material-ui/core/colors\";\r\nimport { comment } from \"../../api\";\r\nimport VoteButtons from \"./VoteButtons\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    secondary: {\r\n      color: theme.palette.secondary.contrastText,\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    primary: {\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    green: {\r\n      backgroundColor: grey[900],\r\n      color: green[500],\r\n    },\r\n    red: {\r\n      backgroundColor: grey[900],\r\n      color: red[500],\r\n    },\r\n    yellow: {\r\n      backgroundColor: grey[900],\r\n      color: yellow[500],\r\n    },\r\n    grey: {\r\n      backgroundColor: grey[900],\r\n      color: grey[100],\r\n    },\r\n    selected: {},\r\n  })\r\n);\r\n\r\nfunction ThreadComment(state: {\r\n  comment: comment;\r\n  selectCallback: (id: number) => void;\r\n  reportCallback: (id: number) => void;\r\n  selected?: boolean;\r\n  voteButtons?: boolean;\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  var reg = new RegExp(/(.*)\\[img:(.*)\\](.*)/g);\r\n  var res: RegExpExecArray | null = reg.exec(state.comment.content);\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: \"900px\",\r\n        maxWidth: \"90%\",\r\n        padding: \"10px\",\r\n        margin: \"15px\",\r\n      }}\r\n      className={classes.primary}\r\n    >\r\n      <Grid container direction=\"row\">\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <Avatar className={classes.secondary}>{state.comment.upvotes}</Avatar>\r\n          <Avatar className={classes.red}>{state.comment.downvotes}</Avatar>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={10}\r\n          style={{\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            display: \"flex\",\r\n            padding: \"5px\",\r\n            paddingLeft: \"10px\",\r\n          }}\r\n        >\r\n          {res != null ? (\r\n            <img\r\n              src={res[2]}\r\n              alt=\"imagePath\"\r\n              width=\"250px\"\r\n              height=\"250px\"\r\n              style={{\r\n                maxWidth: \"90%\",\r\n                maxHeight: \"90%\",\r\n                objectFit: \"cover\",\r\n                paddingBottom: \"20px\",\r\n              }}\r\n            ></img>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n          <Typography variant=\"body1\" style={{ wordWrap: \"break-word\" }}>\r\n            {res != null ? res[1] : \"\"}\r\n            {res != null ? res[3] : state.comment.content}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          {state.voteButtons !== false && (\r\n            <VoteButtons\r\n              comment={state.comment}\r\n              reportCallback={state.reportCallback}\r\n              selectCallback={state.selectCallback}\r\n              selected={state.selected}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ThreadComment;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Service } from \"../api\";\r\nimport { comment } from \"../api/models/comment\";\r\nimport ThreadComment from \"./Thread/Comment\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    thread: {\r\n      padding: theme.spacing(1),\r\n      margin: theme.spacing(1),\r\n      maxWidth: \"1000px\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction HistoryView() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedCommentId, setCommentId] = useState(0);\r\n  const [reportCommentId, setReportId] = useState(0);\r\n  const [getFile, setFile] = useState();\r\n  const [openReport, setOpenReport] = useState(false);\r\n  const [comments, setComments] = useState([\r\n    {\r\n      id: 1,\r\n      threadId: 100,\r\n      parentId: 0,\r\n      content:\r\n        \"Testerhfsdgghbfsgfsidgfdhgfdsgfgsgsdgdgsdssdgdgsgdfkahevhgfghahgdakgkhdgfghfkhdagfg\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    {\r\n      id: 2,\r\n      threadId: 100,\r\n      parentId: 1,\r\n      content: \"dfsah[img:http://http.cat/201]\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    {\r\n      id: 3,\r\n      threadId: 100,\r\n      parentId: 1,\r\n      content: \"dfsah[img:http://http.cat/202]\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    {\r\n      id: 4,\r\n      threadId: 2,\r\n      parentId: 0,\r\n      content: \"dfsah[img:http://http.cat/203]\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    {\r\n      id: 5,\r\n      threadId: 100,\r\n      parentId: 3,\r\n      content: \"dfsah[img:http://http.cat/204]\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n  ] as comment[]);\r\n  Service.getThreadsAt(1, 1, Number.MAX_VALUE).then((threads) => {\r\n    var promises: Promise<comment[]>[] = [];\r\n    threads.forEach((t) => {\r\n      promises.push(Service.getThreadComments(t.id));\r\n    });\r\n    Promise.all(promises).then((resp) => {\r\n      setComments(\r\n        resp.flatMap((e) => {\r\n          return e;\r\n        })\r\n      );\r\n    });\r\n  });\r\n\r\n  function renderComments(cs: comment[], comment: comment): any {\r\n    var children = cs.filter(\r\n      (c) => c.parentId === comment.id && c.threadId === comment.threadId\r\n    );\r\n    return (\r\n      <div>\r\n        <ThreadComment\r\n          comment={comment}\r\n          selectCallback={(id: number) => {\r\n            setCommentId(id);\r\n          }}\r\n          reportCallback={(id: number) => {\r\n            setReportId(id);\r\n            setOpenReport(true);\r\n          }}\r\n          selected={comment.id === selectedCommentId}\r\n        />\r\n        <Grid style={{ marginLeft: \"50px\" }}>\r\n          {children.map((child2) => {\r\n            return renderComments(cs, child2);\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {comments\r\n        .filter((c) => {\r\n          return c.parentId === 0;\r\n        })\r\n        .map((c) => {\r\n          return (\r\n            <Paper className={classes.thread}>\r\n              <Typography variant=\"h4\">Thread {c.threadId}</Typography>\r\n              {renderComments(comments, c)}\r\n            </Paper>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryView;\r\n","import React from \"react\";\r\nimport { thread } from \"../../api\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { green, grey, red, yellow } from \"@material-ui/core/colors\";\r\nimport VoteButtons from \"./VoteButtons\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    secondary: {\r\n      color: theme.palette.secondary.contrastText,\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    primary: {\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    green: {\r\n      backgroundColor: grey[900],\r\n      color: green[500],\r\n    },\r\n    red: {\r\n      backgroundColor: grey[900],\r\n      color: red[500],\r\n    },\r\n    yellow: {\r\n      backgroundColor: grey[900],\r\n      color: yellow[500],\r\n    },\r\n  })\r\n);\r\n\r\nfunction ThreadInfo(state: {\r\n  thread: thread;\r\n  selectCallback: (id: number) => void;\r\n  reportCallback: (id: number) => void;\r\n  selected?: boolean;\r\n}) {\r\n  const classes = useStyles();\r\n  const comment = {\r\n    id: 0,\r\n    threadId: state.thread.id,\r\n    parentId: 0,\r\n    content: state.thread.title + \" \" + state.thread.description,\r\n    upvotes: 0,\r\n    downvotes: 0,\r\n  };\r\n\r\n  var reg = new RegExp(/(.*)\\[img:(.*)\\](.*)/g);\r\n  var res: RegExpExecArray | null = reg.exec(state.thread.description);\r\n  return (\r\n    <Paper\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        padding: \"7px\",\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h4\"\r\n        style={{ padding: \"5px\", wordWrap: \"break-word\" }}\r\n      >\r\n        {state.thread.title}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\"\r\n        style={{ padding: \"5px\", wordWrap: \"break-word\" }}\r\n      >\r\n        {res != null ? res[1] : \"\"}\r\n        {res != null ? res[3] : state.thread.description}\r\n      </Typography>\r\n      {res != null ? (\r\n        <img\r\n          src={res[2]}\r\n          alt=\"imagePath\"\r\n          width=\"250px\"\r\n          height=\"250px\"\r\n          style={{\r\n            maxWidth: \"90%\",\r\n            maxHeight: \"90%\",\r\n            objectFit: \"cover\",\r\n            paddingBottom: \"20px\",\r\n          }}\r\n        ></img>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n\r\n      <Grid container>\r\n        <Grid item xs={2} />\r\n        <Grid\r\n          item\r\n          xs={8}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            paddingTop: \"5px\",\r\n          }}\r\n        >\r\n          <VoteButtons\r\n            comment={comment}\r\n            selectCallback={(id: number) => {\r\n              state.selectCallback(0);\r\n            }}\r\n            reportCallback={(id: number) => {\r\n              state.reportCallback(0);\r\n            }}\r\n            selected={state.selected}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2} />\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default ThreadInfo;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Paper,\r\n  InputBase,\r\n  Divider,\r\n  IconButton,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  RateReview as RateReviewIcon,\r\n  AddAPhoto as AddAPhotoIcon,\r\n  Person as PersonIcon,\r\n  Block as BlockIcon,\r\n} from \"@material-ui/icons\";\r\nimport { AnyARecord } from \"dns\";\r\n\r\nfunction WriteComment(state: {\r\n  submit: (\r\n    message: string,\r\n    anonymous: boolean,\r\n    file: object\r\n  ) => Promise<boolean>;\r\n}) {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [getFile, setFile] = useState<object>({});\r\n  const [getAnonymous, setAnonymous] = useState(true);\r\n\r\n  function submit() {\r\n    state.submit(msg, getAnonymous, getFile).then((r) => {\r\n      setMsg(\"\");\r\n      if (!r) {\r\n        setError(true);\r\n      }\r\n    });\r\n    setFile({});\r\n  }\r\n\r\n  function onFileChange(event: any) {\r\n    setFile(event.target.files[0]);\r\n    console.log(typeof event.target.files[0]);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper component=\"form\">\r\n        <form onSubmit={submit} style={{ width: \"100%\" }}>\r\n          <FormControl style={{ width: \"100%\" }}>\r\n            <Grid container>\r\n              <input\r\n                onChange={onFileChange}\r\n                style={{ display: \"none\" }}\r\n                id=\"fileUpload\"\r\n                type=\"file\"\r\n              />\r\n              <label\r\n                htmlFor=\"fileUpload\"\r\n                style={{ width: \"10%\", paddingRight: \"5px\" }}\r\n              >\r\n                <Button component=\"span\" style={{}}>\r\n                  <AddAPhotoIcon />\r\n                </Button>\r\n              </label>\r\n              <TextField\r\n                multiline={true}\r\n                style={{ width: \"60%\", padding: \"3px\" }}\r\n                placeholder=\"Input Comment\"\r\n                value={msg}\r\n                onChange={(s) => {\r\n                  setMsg(s.target.value);\r\n                  setError(false);\r\n                }}\r\n                error={error}\r\n                inputProps={{ \"aria-label\": \"input comment\" }}\r\n              />\r\n              {/* <Divider orientation=\"vertical\" /> */}\r\n              <IconButton\r\n                onClick={() => {\r\n                  setAnonymous(!getAnonymous);\r\n                }}\r\n                aria-label=\"submit\"\r\n                style={{\r\n                  maxWidth: \"10%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                {getAnonymous ? <BlockIcon /> : <PersonIcon />}\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => {\r\n                  submit();\r\n                }}\r\n                aria-label=\"submit\"\r\n                style={{\r\n                  maxWidth: \"15%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  paddingLeft: \"5%\",\r\n                }}\r\n              >\r\n                <RateReviewIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </FormControl>\r\n        </form>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default WriteComment;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@material-ui/core\";\r\n\r\nfunction ReportDialog(props: {\r\n  open: boolean;\r\n  callback: (reason: string) => void;\r\n}) {\r\n  const [reason, setReason] = React.useState(\"\");\r\n  const handleClickOpen = () => {};\r\n\r\n  const handleClose = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        style={{ display: \"none\" }}\r\n      >\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Report</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please provide a reason for your report.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"reason\"\r\n            value={reason}\r\n            onChange={(e) => setReason(e.target.value)}\r\n            label=\"Reason\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              props.callback(reason);\r\n              handleClose();\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Send\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportDialog;\r\n","import ThreadComment from \"./Thread/Comment\";\r\nimport ThreadInfo from \"./Thread/ThreadInfo\";\r\nimport WriteComment from \"./Thread/WriteComment\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { Service as ServiceApi } from \"../api/services/Service\";\r\nimport { thread } from \"../api/models/thread\";\r\nimport { useState } from \"react\";\r\nimport { comment } from \"../api\";\r\nimport { Grid, AppBar } from \"@material-ui/core\";\r\nimport ReportDialog from \"./Thread/ReportDialog\";\r\n\r\nasync function onMessageSubmit(\r\n  msg: string,\r\n  anon: boolean,\r\n  threadId: number,\r\n  commentId: number,\r\n  file: any\r\n): Promise<boolean> {\r\n  if (file !== null) {\r\n    var formdata = new FormData();\r\n    formdata.append(\"threadId\", threadId.toString());\r\n    formdata.append(\"commentId\", commentId.toString());\r\n    formdata.append(\"image\", file, file.name);\r\n    var resp = await ServiceApi.uploadImage(formdata);\r\n    msg += \"[img:\" + resp.url + \"]\";\r\n  }\r\n  ServiceApi.postComment(threadId, {\r\n    threadId: threadId,\r\n    parentId: commentId,\r\n    anonymous: anon,\r\n    content: msg,\r\n  });\r\n  return new Promise<boolean>(() => {\r\n    return false;\r\n  });\r\n}\r\n\r\nconst DEFAULT_LEVELS = 3;\r\n\r\nfunction sendReport(reason: string, commentId: number, threadId: number) {\r\n  ServiceApi.reportComment(threadId, commentId, {\r\n    comment: {\r\n      id: commentId,\r\n      threadId: threadId,\r\n      parentId: 0,\r\n      content: \"\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    reason: reason,\r\n  });\r\n}\r\n\r\nfunction ThreadView(state: { thread: thread }) {\r\n  const [selectedCommentId, setCommentId] = useState(0);\r\n  const [reportCommentId, setReportId] = useState(0);\r\n  const [getFile, setFile] = useState();\r\n  const [openReport, setOpenReport] = useState(false);\r\n  const [comments, setComments] = useState([\r\n    {\r\n      id: 1,\r\n      threadId: 100,\r\n      parentId: 0,\r\n      content:\r\n        \"Testerhfsdgghbfsgfsidgfdhgfdsgfgsgsdgdgsdssdgdgsgdfkahevhgfghahgdakgkhdgfghfkhdagfg\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    {\r\n      id: 2,\r\n      threadId: 100,\r\n      parentId: 1,\r\n      content: \"dfsah[img:http://http.cat/201]\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    {\r\n      id: 3,\r\n      threadId: 100,\r\n      parentId: 1,\r\n      content: \"dfsah[img:http://http.cat/202]\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    {\r\n      id: 4,\r\n      threadId: 100,\r\n      parentId: 2,\r\n      content: \"dfsah[img:http://http.cat/203]\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n    {\r\n      id: 5,\r\n      threadId: 100,\r\n      parentId: 3,\r\n      content: \"dfsah[img:http://http.cat/204]\",\r\n      upvotes: 5,\r\n      downvotes: 5,\r\n    },\r\n  ] as comment[]);\r\n\r\n  ServiceApi.getThreadComments(state.thread.id, DEFAULT_LEVELS).then((cs) => {\r\n    setComments(cs);\r\n  });\r\n\r\n  function renderComments(cs: comment[], comment: comment): any {\r\n    var children = cs.filter((c) => c.parentId === comment.id);\r\n    return (\r\n      <div>\r\n        <ThreadComment\r\n          comment={comment}\r\n          selectCallback={(id: number) => {\r\n            setCommentId(id);\r\n          }}\r\n          reportCallback={(id: number) => {\r\n            setReportId(id);\r\n            setOpenReport(true);\r\n          }}\r\n          selected={comment.id === selectedCommentId}\r\n        />\r\n        <Grid style={{ marginLeft: \"50px\" }}>\r\n          {children.map((child2) => {\r\n            return renderComments(cs, child2);\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ThreadInfo\r\n        thread={state.thread}\r\n        selectCallback={(id: number) => {\r\n          setCommentId(id);\r\n        }}\r\n        reportCallback={(id: number) => {\r\n          setReportId(id);\r\n          setOpenReport(true);\r\n        }}\r\n        selected={selectedCommentId === 0}\r\n      />\r\n      <div>\r\n        {comments\r\n          .filter((c) => c.parentId === 0)\r\n          .map((c) => {\r\n            return renderComments(comments, c);\r\n          })}\r\n        <div style={{ paddingTop: \"50px\" }}></div>\r\n      </div>\r\n      <Container fixed>\r\n        <AppBar position=\"fixed\" style={{ bottom: \"0\", top: \"auto\" }}>\r\n          <WriteComment\r\n            submit={(msg, anon, file) => {\r\n              console.log(msg, file);\r\n              return onMessageSubmit(\r\n                msg,\r\n                anon,\r\n                state.thread.id,\r\n                selectedCommentId,\r\n                getFile === undefined ? null : getFile\r\n              );\r\n            }}\r\n          />\r\n        </AppBar>\r\n        {openReport && (\r\n          <ReportDialog\r\n            open={openReport}\r\n            callback={(r) => {\r\n              sendReport(r, reportCommentId, state.thread.id);\r\n              setOpenReport(false);\r\n            }}\r\n          />\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThreadView;\r\n","import React, { FormEvent, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, Grid, Paper } from \"@material-ui/core\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Lock from \"@material-ui/icons/Lock\";\r\nimport { useUserContext } from \"../../contexts/UserContext\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Service as ApiService } from \"../../api/services/Service\";\r\nimport { OpenAPI } from \"../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Register() {\r\n  const { userCredentials, setUserCredentials } = useUserContext();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [privateAcc, setPrivate] = useState<boolean>(false);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  function submit(event: React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    ApiService.register({\r\n      email: username,\r\n      password: password,\r\n      private: privateAcc,\r\n    }).then(\r\n      () => {\r\n        ApiService.login({ email: username, password: password }).then((r) => {\r\n          setUserCredentials({ email: username, userid: r.id, token: r.token });\r\n          OpenAPI.WITH_CREDENTIALS = true;\r\n          OpenAPI.TOKEN = r.token;\r\n          history.push(\"/\");\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper style={{ width: \"300px\" }}>\r\n      <Grid justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n        <form autoComplete=\"off\" onSubmit={(e) => submit(e)}>\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ padding: \"10px\" }}\r\n          >\r\n            <FormControl>\r\n              <TextField\r\n                required\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                value={username}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <TextField\r\n              required\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Lock />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <FormGroup row>\r\n              <FormControlLabel\r\n                label=\"private\"\r\n                control={\r\n                  <Checkbox\r\n                    checked={privateAcc}\r\n                    onChange={(e) => setPrivate(e.target.checked)}\r\n                    name=\"private\"\r\n                  />\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                endIcon={<VpnKeyIcon />}\r\n                type=\"submit\"\r\n                onClick={() =>\r\n                  setUserCredentials({\r\n                    email: \"max.mustermann@gmail.com\",\r\n                    userid: 1,\r\n                    token: \"2dg638d3928h9283hd\",\r\n                  })\r\n                }\r\n              >\r\n                login\r\n              </Button>\r\n            </FormGroup>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useUserContext } from \"../contexts/UserContext\";\r\nimport Register from \"./Account/Register\";\r\n\r\nfunction RegisterView() {\r\n  const { userCredentials, setUserCredentials } = useUserContext();\r\n  return (\r\n    <div>\r\n      <h1>Register View</h1>\r\n      <h3>email: {userCredentials.email}</h3>\r\n      <h3>token: {userCredentials.token}</h3>\r\n      <Grid container justify=\"center\">\r\n        <Register />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterView;\r\n","import { useState } from \"react\";\r\nimport Comment from \"./Thread/Comment\";\r\nimport { report, Service as ApiService, Service } from \"../api\";\r\nimport {\r\n  Button,\r\n  Avatar,\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { Block as BlockIcon, Check as CheckIcon } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n      marginLeft: \"10px\",\r\n    },\r\n    report: {\r\n      padding: theme.spacing(1),\r\n      margin: theme.spacing(1),\r\n      maxWidth: \"700px\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction handleBan(r: report) {\r\n  Service.handleReport(r.id, \"ban\");\r\n}\r\n\r\nfunction handleIgnore(r: report) {\r\n  Service.handleReport(r.id, \"ignore\");\r\n}\r\n\r\nfunction ReportsView() {\r\n  const [getReports, setReports] = useState<report[]>([\r\n    {\r\n      id: 1,\r\n      comment: {\r\n        id: 1,\r\n        threadId: 100,\r\n        parentId: 0,\r\n        content:\r\n          \"Testerhfsdgghbfsgfsidgfdhgfdsgfgsgsdgdgsdssdgdgsgdfkahevhgfghahgdakgkhdgfghfkhdagfg\",\r\n        upvotes: 5,\r\n        downvotes: 5,\r\n      },\r\n      reason: \"reason\",\r\n    },\r\n  ]);\r\n\r\n  ApiService.getReports().then((reports) => {\r\n    if (reports.length > 0) {\r\n      setReports(reports);\r\n    }\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      {getReports.map((r) => {\r\n        return (\r\n          <Paper className={classes.report}>\r\n            <Comment\r\n              comment={r.comment}\r\n              selectCallback={(id) => {}}\r\n              reportCallback={(id) => {}}\r\n              voteButtons={false}\r\n            ></Comment>\r\n            <div className={classes.root}>\r\n              <Typography variant=\"body1\">{r.reason}</Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<CheckIcon />}\r\n                onClick={() => {\r\n                  handleBan(r);\r\n                }}\r\n              >\r\n                Ban user\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<BlockIcon />}\r\n                onClick={() => {\r\n                  handleIgnore(r);\r\n                }}\r\n              >\r\n                Dismiss\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportsView;\r\n","import LoginView from \"./LoginView\";\r\nimport MapView from \"./MapView\";\r\nimport HistoryView from \"./HistoryView\";\r\nimport ThreadView from \"./ThreadView\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {\r\n  ThemeProvider,\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport React from \"react\";\r\nimport RegisterView from \"./RegisterView\";\r\nimport { AccountCircle, Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport ReportsView from \"./ReportsView\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      light: \"#ffe54c\",\r\n      main: \"#ffb300\",\r\n      dark: \"#c68400\",\r\n      contrastText: \"#000\",\r\n    },\r\n    secondary: {\r\n      light: \"#8bf6ff\",\r\n      main: \"#4fc3f7\",\r\n      dark: \"#0093c4\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nfunction App() {\r\n  const [userCredentials, setUserCredentials] = React.useState({\r\n    email: \"\",\r\n    userid: 0,\r\n    token: \"\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n      />\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">MapView</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/login\">LoginView</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/history\">HistoryView</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/thread\">ThreadView</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/register\">RegisterView</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/report\">ReportView</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Title\r\n              </Typography>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n                href=\"/login\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <UserContext.Provider value={{ userCredentials, setUserCredentials }}>\r\n            <Switch>\r\n              <Route path=\"/login\">\r\n                <LoginView />\r\n              </Route>\r\n              <Route path=\"/history\">\r\n                <HistoryView />\r\n              </Route>\r\n              <Route path=\"/thread\">\r\n                <ThreadView\r\n                  thread={{\r\n                    id: 1,\r\n                    title: \"Title\",\r\n                    description: \"dfsah[img:http://http.cat/201]\",\r\n                    location: { lat: 1, lng: 2 },\r\n                  }}\r\n                />\r\n              </Route>\r\n              <Route path=\"/register\">\r\n                <RegisterView />\r\n              </Route>\r\n              <Route path=\"/report\">\r\n                <ReportsView />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <MapView />\r\n              </Route>\r\n            </Switch>\r\n          </UserContext.Provider>\r\n        </div>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}